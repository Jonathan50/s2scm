]],
				[43,
					1004,
					[["procDef", "make a procedure %n %n %b %n", ["env", "min arity", "variadic?", "pc"], [1, 1, false, 1], false],
						["doIfElse",
							[">",
								["+", ["readVariable", "free"], 4],
								["+", ["readVariable", "tospace"], ["\/", ["lineCountOfList:", "heap"], 2]]],
							[["call", "gc"],
								["doIf",
									[">",
										["+", ["readVariable", "free"], 4],
										["+", ["readVariable", "tospace"], ["\/", ["lineCountOfList:", "heap"], 2]]],
									[["call", "error %s %s", "Please expand heap", ""]]],
								["call", "move %s", ["getParam", "env", "r"]],
								["setLine:ofList:to:", ["+", ["readVariable", "free"], 1], "heap", ["readVariable", "result"]]],
							[["setLine:ofList:to:", ["+", ["readVariable", "free"], 1], "heap", ["getParam", "env", "r"]]]],
						["setLine:ofList:to:", ["readVariable", "free"], "heap", "-2"],
						["setLine:ofList:to:", ["+", ["readVariable", "free"], 2], "heap", ["getParam", "min arity", "r"]],
						["setLine:ofList:to:", ["+", ["readVariable", "free"], 3], "heap", ["getParam", "variadic?", "b"]],
						["setLine:ofList:to:", ["+", ["readVariable", "free"], 4], "heap", ["getParam", "pc", "r"]],
						["setVar:to:", "result", ["readVariable", "free"]],
						["changeVar:by:", "free", 6]]],
				[628,
					1022,
					[["procDef", "make an escape procedure %n %n", ["pc", "stack"], [0, 0], false],
						["doIfElse",
							["=",
								["readVariable", "free"],
								["+", ["readVariable", "tospace"], ["\/", ["lineCountOfList:", "heap"], 2]]],
							[["call", "gc"],
								["doIf",
									["=",
										["readVariable", "free"],
										["+", ["readVariable", "tospace"], ["\/", ["lineCountOfList:", "heap"], 2]]],
									[["call", "error %s %s", "Please expand heap", ""]]],
								["call", "move %s", ["getParam", "stack", "r"]],
								["setLine:ofList:to:", ["+", ["readVariable", "free"], 2], "heap", ["readVariable", "result"]]],
							[["setLine:ofList:to:", ["+", ["readVariable", "free"], 2], "heap", ["getParam", "stack", "r"]]]],
						["setLine:ofList:to:", ["readVariable", "free"], "heap", "-3"],
						["setLine:ofList:to:", ["+", ["readVariable", "free"], 1], "heap", ["getParam", "pc", "r"]],
						["setVar:to:", "result", ["readVariable", "free"]],
						["changeVar:by:", "free", 3]]],
				[1105,
					906,
					[["procDef", "apply %n", ["proc"], [1], false],
						["doIf",
							["=", ["%", ["getParam", "proc", "r"], 3], "1"],
							[["doIf",
									["=", ["getLine:ofList:", ["getParam", "proc", "r"], "heap"], "-2"],
									[["doIf",
											["<",
												["getLine:ofList:", ["-", ["readVariable", "argv"], 1], "heap"],
												["getLine:ofList:", ["+", ["getParam", "proc", "r"], 2], "heap"]],
											[["call", "error %s %s", "Too few arguments", ["getParam", "proc", "r"]]]],
										["doIf",
											["&",
												[">",
													["getLine:ofList:", ["-", ["readVariable", "argv"], 1], "heap"],
													["getLine:ofList:", ["+", ["getParam", "proc", "r"], 2], "heap"]],
												["=", ["getLine:ofList:", ["+", ["getParam", "proc", "r"], 3], "heap"], "0"]],
											[["call", "error %s %s", "Too many arguments", ["getParam", "proc", "r"]]]],
										["setVar:to:", "env", ["getLine:ofList:", ["+", ["getParam", "proc", "r"], 1], "heap"]],
										["setVar:to:", "pc", ["getLine:ofList:", ["+", ["getParam", "proc", "r"], 4], "heap"]],
										["stopScripts", "this script"]]],
								["doIf",
									["=", ["getLine:ofList:", ["getParam", "proc", "r"], "heap"], "-3"],
									[["doIf",
											["<", ["getLine:ofList:", ["-", ["readVariable", "argv"], 1], "heap"], "1"],
											[["call", "error %s %s", "Too few arguments", ["getParam", "proc", "r"]]]],
										["doIf",
											[">", ["getLine:ofList:", ["-", ["readVariable", "argv"], 1], "heap"], "1"],
											[["call", "error %s %s", "Too many arguments", ["getParam", "proc", "r"]]]],
										["setVar:to:", "result", ["getLine:ofList:", ["readVariable", "argv"], "heap"]],
										["call", "restore stack %n", ["getLine:ofList:", ["+", ["getParam", "proc", "r"], 2], "heap"]],
										["setVar:to:", "pc", ["getLine:ofList:", ["+", ["getParam", "proc", "r"], 1], "heap"]],
										["stopScripts", "this script"]]]]],
						["call", "error %s %s", "Not a procedure", ["getParam", "proc", "r"]]]],
				[44,
					512,
					[["procDef", "cons %s %s", ["car", "cdr"], ["", ""], false],
						["doIfElse",
							["=",
								["readVariable", "free"],
								["+", ["readVariable", "tospace"], ["\/", ["lineCountOfList:", "heap"], 2]]],
							[["call", "gc"],
								["doIf",
									["=",
										["readVariable", "free"],
										["+", ["readVariable", "tospace"], ["\/", ["lineCountOfList:", "heap"], 2]]],
									[["call", "error %s %s", "Please expand heap", ""]]],
								["call", "move %s", ["getParam", "car", "r"]],
								["setLine:ofList:to:", ["+", ["readVariable", "free"], 1], "heap", ["readVariable", "result"]],
								["call", "move %s", ["getParam", "cdr", "r"]],
								["setLine:ofList:to:", ["+", ["readVariable", "free"], 2], "heap", ["readVariable", "result"]]],
							[["setLine:ofList:to:", ["+", ["readVariable", "free"], 1], "heap", ["getParam", "car", "r"]],
								["setLine:ofList:to:", ["+", ["readVariable", "free"], 2], "heap", ["getParam", "cdr", "r"]]]],
						["setLine:ofList:to:", ["readVariable", "free"], "heap", "-1"],
						["setVar:to:", "result", ["readVariable", "free"]],
						["changeVar:by:", "free", 3]]],
				[27,
					282,
					[["procDef", "save stack", [], [], false],
						["setVar:to:", "result", "-2"],
						["setVar:to:", "i", ["lineCountOfList:", "stack"]],
						["doRepeat",
							["lineCountOfList:", "stack"],
							[["call", "cons %s %s", ["getLine:ofList:", ["readVariable", "i"], "stack"], ["readVariable", "result"]],
								["changeVar:by:", "i", -1]]]]],
				[296,
					276,
					[["procDef", "restore stack %n", ["stack"], [0], false],
						["setVar:to:", "list", ["getParam", "stack", "r"]],
						["deleteLine:ofList:", "all", "stack"],
						["doUntil",
							["=", ["readVariable", "list"], "-2"],
							[["append:toList:", ["getLine:ofList:", ["+", ["readVariable", "list"], 1], "heap"], "stack"],
								["setVar:to:", "list", ["getLine:ofList:", ["+", ["readVariable", "list"], 2], "heap"]]]]]],
				[25.2,
					1733.4,
					[["procDef", "gc", [], [], true],
						["setVar:to:",
							"tospace",
							["-", ["+", ["\/", ["lineCountOfList:", "heap"], 2], 2], ["readVariable", "tospace"]]],
						["setVar:to:", "free", ["readVariable", "tospace"]],
						["setVar:to:", "scan", ["readVariable", "tospace"]],
						["call", "move %s", ["readVariable", "env"]],
						["setVar:to:", "env", ["readVariable", "result"]],
						["call", "move %s", ["readVariable", "frame"]],
						["setVar:to:", "frame", ["readVariable", "result"]],
						["call", "move %s", ["readVariable", "argv"]],
						["setVar:to:", "argv", ["readVariable", "result"]],
						["call", "move %s", ["readVariable", "proc"]],
						["setVar:to:", "proc", ["readVariable", "result"]],
						["setVar:to:", "i", "1"],
						["doRepeat",
							["lineCountOfList:", "stack"],
							[["call", "move %s", ["getLine:ofList:", ["readVariable", "i"], "stack"]],
								["setLine:ofList:to:", ["readVariable", "i"], "stack", ["readVariable", "result"]],
								["changeVar:by:", "i", 1]]],
						["doUntil",
							["=", ["readVariable", "scan"], ["readVariable", "free"]],
							[["doIfElse",
									["=", ["getLine:ofList:", ["readVariable", "scan"], "heap"], "-1"],
									[["call", "move %s", ["getLine:ofList:", ["+", ["readVariable", "scan"], 1], "heap"]],
										["setLine:ofList:to:", ["+", ["readVariable", "scan"], 1], "heap", ["readVariable", "result"]],
										["call", "move %s", ["getLine:ofList:", ["+", ["readVariable", "scan"], 2], "heap"]],
										["setLine:ofList:to:", ["+", ["readVariable", "scan"], 2], "heap", ["readVariable", "result"]],
										["changeVar:by:", "scan", 3]],
									[["doIfElse",
											["=", ["getLine:ofList:", ["readVariable", "scan"], "heap"], "-2"],
											[["call", "move %s", ["getLine:ofList:", ["+", ["readVariable", "scan"], 1], "heap"]],
												["setLine:ofList:to:", ["+", ["readVariable", "scan"], 1], "heap", ["readVariable", "result"]],
												["changeVar:by:", "scan", 6]],
											[["doIfElse",
													["=", ["getLine:ofList:", ["readVariable", "scan"], "heap"], "-3"],
													[["call", "move %s", ["getLine:ofList:", ["+", ["readVariable", "scan"], 2], "heap"]],
														["setLine:ofList:to:", ["+", ["readVariable", "scan"], 2], "heap", ["readVariable", "result"]],
														["changeVar:by:", "scan", 3]],
													[["setVar:to:", "i", "1"],
														["doRepeat",
															["getLine:ofList:", ["readVariable", "scan"], "heap"],
															[["call", "move %s", ["getLine:ofList:", ["+", ["readVariable", "scan"], ["readVariable", "i"]], "heap"]],
																["setLine:ofList:to:", ["+", ["readVariable", "scan"], ["readVariable", "i"]], "heap", ["readVariable", "result"]],
																["changeVar:by:", "i", 1]]],
														["changeVar:by:",
															"scan",
															["*",
																3,
																["computeFunction:of:",
																	"ceiling",
																	["\/", ["+", 1, ["getLine:ofList:", ["readVariable", "scan"], "heap"]], 3]]]]]]]]]]]]]],
				[245.3,
					1455.4,
					[["procDef", "make a vector %n", ["length"], [0], false],
						["doIf",
							[">",
								["+", ["readVariable", "free"], ["getParam", "length", "r"]],
								["+", ["readVariable", "tospace"], ["\/", ["lineCountOfList:", "heap"], 2]]],
							[["call", "gc"],
								["doIf",
									[">",
										["+", ["readVariable", "free"], ["getParam", "length", "r"]],
										["+", ["readVariable", "tospace"], ["\/", ["lineCountOfList:", "heap"], 2]]],
									[["call", "error %s %s", "Please expand heap", ""]]]]],
						["setLine:ofList:to:", ["readVariable", "free"], "heap", ["getParam", "length", "r"]],
						["setVar:to:", "result", ["+", ["readVariable", "free"], 1]],
						["changeVar:by:",
							"free",
							["*",
								3,
								["computeFunction:of:", "ceiling", ["\/", ["+", 1, ["getParam", "length", "r"]], 3]]]]]],
				[35.7,
					3189.7,
					[["procDef", "external representation of %s", ["object"], [""], false],
						["doIfElse",
							["=", ["+", ["getParam", "object", "r"], 0], ["getParam", "object", "r"]],
							[["doIf",
									["=", ["getParam", "object", "r"], "-2"],
									[["setVar:to:", "result", "()"], ["stopScripts", "this script"]]],
								["doIf",
									["=", ["getParam", "object", "r"], "-5"],
									[["setVar:to:", "result", "#t"], ["stopScripts", "this script"]]],
								["doIf",
									["=", ["getParam", "object", "r"], "-8"],
									[["setVar:to:", "result", "#f"], ["stopScripts", "this script"]]],
								["doIf",
									["=", ["%", ["getParam", "object", "r"], 3], "0"],
									[["setVar:to:", "result", ["\/", ["getParam", "object", "r"], 3]], ["stopScripts", "this script"]]],
								["doIf",
									["=", ["%", ["getParam", "object", "r"], 3], "1"],
									[["doIf",
											["=", ["getLine:ofList:", ["getParam", "object", "r"], "heap"], "-1"],
											[["call", "external representation of %s", ["getLine:ofList:", ["+", ["getParam", "object", "r"], 1], "heap"]],
												["call",
													"external representation of pair %s %s",
													["readVariable", "result"],
													["getLine:ofList:", ["+", ["getParam", "object", "r"], 2], "heap"]],
												["stopScripts", "this script"]]],
										["doIf",
											["=", ["getLine:ofList:", ["getParam", "object", "r"], "heap"], "-2"],
											[["doIfElse",
													["=", ["getLine:ofList:", ["+", ["getParam", "object", "r"], 3], "heap"], "1"],
													[["setVar:to:",
															"result",
															["concatenate:with:",
																["concatenate:with:", "#[procedure of arity ", ["getLine:ofList:", ["+", ["getParam", "object", "r"], 2], "heap"]],
																" or more]"]]],
													[["setVar:to:",
															"result",
															["concatenate:with:",
																["concatenate:with:", "#[procedure of arity ", ["getLine:ofList:", ["+", ["getParam", "object", "r"], 2], "heap"]],
																"]"]]]],
												["stopScripts", "this script"]]],
										["doIf",
											["=", ["getLine:ofList:", ["getParam", "object", "r"], "heap"], "-3"],
											[["setVar:to:", "result", "#[escape procedure]"], ["stopScripts", "this script"]]]]],
								["call", "external representation of vector %s %s %s", "", "0", ["getParam", "object", "r"]]],
							[["setVar:to:", "result", ["getParam", "object", "r"]]]]]],
				[39,
					4288,
					[["procDef", "external representation of pair %s %s", ["result", "cdr"], ["", ""], false],
						["doIf",
							["=", ["getParam", "cdr", "r"], "-2"],
							[["setVar:to:", "result", ["concatenate:with:", ["concatenate:with:", "(", ["getParam", "result", "r"]], ")"]],
								["stopScripts", "this script"]]],
						["doIf",
							["&",
								["=", ["%", ["getParam", "cdr", "r"], 3], "1"],
								["=", ["getLine:ofList:", ["getParam", "cdr", "r"], "heap"], "-1"]],
							[["call", "external representation of %s", ["getLine:ofList:", ["+", ["getParam", "cdr", "r"], 1], "heap"]],
								["call",
									"external representation of pair %s %s",
									["concatenate:with:", ["concatenate:with:", ["getParam", "result", "r"], " "], ["readVariable", "result"]],
									["getLine:ofList:", ["+", ["getParam", "cdr", "r"], 2], "heap"]],
								["stopScripts", "this script"]]],
						["call", "external representation of %s", ["getParam", "cdr", "r"]],
						["setVar:to:",
							"result",
							["concatenate:with:",
								["concatenate:with:",
									["concatenate:with:", "(", ["getParam", "result", "r"]],
									["concatenate:with:", " . ", ["readVariable", "result"]]],
								")"]]]],
				[520,
					4258,
					[["procDef", "external representation of vector %s %s %s", ["result", "j", "vec"], ["", "", ""], false],
						["doIfElse",
							["=",
								["getParam", "j", "r"],
								["getLine:ofList:", ["-", ["getParam", "vec", "r"], 1], "heap"]],
							[["setVar:to:", "result", ["concatenate:with:", ["concatenate:with:", "#(", ["getParam", "result", "r"]], ")"]]],
							[["call",
									"external representation of %s",
									["getLine:ofList:", ["+", ["getParam", "vec", "r"], ["getParam", "j", "r"]], "heap"]],
								["call",
									"external representation of vector %s %s %s",
									["concatenate:with:", ["concatenate:with:", ["getParam", "result", "r"], " "], ["readVariable", "result"]],
									["+", ["getParam", "j", "r"], 1],
									["getParam", "vec", "r"]]]]]],
				[50,
					2915,
					[["procDef", "error %s %s", ["message", "object"], ["", ""], false],
						["stopScripts", "other scripts in sprite"],
						["doIfElse",
							["=", ["getParam", "object", "r"], ""],
							[["doAsk", ["concatenate:with:", "Error: ", ["getParam", "message", "r"]]]],
							[["call", "external representation of %s", ["getParam", "object", "r"]],
								["doAsk",
									["concatenate:with:",
										["concatenate:with:", "Error: ", ["getParam", "message", "r"]],
										["concatenate:with:", ": ", ["readVariable", "result"]]]]]],
						["stopScripts", "all"]]],
				[573,
					1944,
					[["procDef", "move %s", ["object"], [""], false],
						["doIf",
							["|",
								["|",
									["not",
										["=", ["+", ["getParam", "object", "r"], 0], ["getParam", "object", "r"]]],
									["=", ["%", ["getParam", "object", "r"], 3], "0"]],
								["<", ["getParam", "object", "r"], "0"]],
							[["setVar:to:", "result", ["getParam", "object", "r"]], ["stopScripts", "this script"]]],
						["doIf",
							["=", ["%", ["getParam", "object", "r"], 3], "1"],
							[["doIf",
									["=", ["getLine:ofList:", ["getParam", "object", "r"], "heap"], "-4"],
									[["setVar:to:", "result", ["getLine:ofList:", ["+", ["getParam", "object", "r"], 1], "heap"]],
										["stopScripts", "this script"]]],
								["setVar:to:", "result", ["readVariable", "free"]],
								["setLine:ofList:to:", ["readVariable", "free"], "heap", ["getLine:ofList:", ["getParam", "object", "r"], "heap"]],
								["doIfElse",
									["|",
										["=", ["getLine:ofList:", ["getParam", "object", "r"], "heap"], "-1"],
										["=", ["getLine:ofList:", ["getParam", "object", "r"], "heap"], "-3"]],
									[["call", "copy %n objects from address %n to %n", 3, ["getParam", "object", "r"], ["readVariable", "free"]],
										["changeVar:by:", "free", 3]],
									[["doIf",
											["=", ["getLine:ofList:", ["getParam", "object", "r"], "heap"], "-2"],
											[["call", "copy %n objects from address %n to %n", 5, ["getParam", "object", "r"], ["readVariable", "free"]],
												["changeVar:by:", "free", 6]]]]],
								["setLine:ofList:to:", ["getParam", "object", "r"], "heap", "-4"],
								["setLine:ofList:to:", ["+", ["getParam", "object", "r"], 1], "heap", ["readVariable", "result"]],
								["stopScripts", "this script"]]],
						["doIf",
							["=", ["getLine:ofList:", ["-", ["getParam", "object", "r"], 1], "heap"], "-4"],
							[["setVar:to:", "result", ["getLine:ofList:", ["getParam", "object", "r"], "heap"]], ["stopScripts", "this script"]]],
						["setLine:ofList:to:",
							["readVariable", "free"],
							"heap",
							["getLine:ofList:", ["-", ["getParam", "object", "r"], 1], "heap"]],
						["call",
							"copy %n objects from address %n to %n",
							["+", 1, ["getLine:ofList:", ["-", ["getParam", "object", "r"], 1], "heap"]],
							["-", ["getParam", "object", "r"], 1],
							["readVariable", "free"]],
						["setVar:to:", "result", ["+", ["readVariable", "free"], 1]],
						["changeVar:by:",
							"free",
							["*",
								3,
								["computeFunction:of:",
									"ceiling",
									["\/",
										["+", 1, ["getLine:ofList:", ["-", ["getParam", "object", "r"], 1], "heap"]],
										3]]]],
						["setLine:ofList:to:", ["-", ["getParam", "object", "r"], 1], "heap", "-4"],
						["setLine:ofList:to:", ["getParam", "object", "r"], "heap", ["readVariable", "result"]]]],
				[487.1,
					3025.3,
					[["procDef", "copy %n objects from address %n to %n", ["k", "i", "j"], [1, 1, 1], false],
						["doIf",
							[">", ["getParam", "k", "r"], "0"],
							[["setLine:ofList:to:", ["getParam", "j", "r"], "heap", ["getLine:ofList:", ["getParam", "i", "r"], "heap"]],
								["call",
									"copy %n objects from address %n to %n",
									["-", ["getParam", "k", "r"], 1],
									["+", ["getParam", "i", "r"], 1],
									["+", ["getParam", "j", "r"], 1]]]]]],
				[312.5,
					28,
					[["procDef", "make a list with items from vector %n from %n", ["vec", "j"], [1, 1], false],
						["setVar:to:", "result", "-2"],
						["setVar:to:", "i", ["getLine:ofList:", ["-", ["getParam", "vec", "r"], 1], "heap"]],
						["doRepeat",
							["-",
								["getLine:ofList:", ["-", ["getParam", "vec", "r"], 1], "heap"],
								["getParam", "j", "r"]],
							[["changeVar:by:", "i", -1],
								["call",
									"cons %s %s",
									["getLine:ofList:", ["+", ["getParam", "vec", "r"], ["readVariable", "i"]], "heap"],
									["readVariable", "result"]]]]]],
				[629.35,
					94.4,
					[["procDef", "make a vector with items from list %n leaving %n", ["list", "i"], [1, 1], false],
						["setVar:to:", "length", 0],
						["setVar:to:", "list", ["getParam", "list", "r"]],
						["doUntil",
							["=", ["readVariable", "list"], "-2"],
							[["doIf",
									["not", ["=", ["%", ["readVariable", "list"], 3], "1"]],
									[["call", "error %s %s", "Not a list", ["getParam", "list", "r"]]]],
								["setVar:to:", "list", ["getLine:ofList:", ["+", ["readVariable", "list"], 2], "heap"]],
								["changeVar:by:", "length", 1]]],
						["call", "make a vector %n", ["+", ["getParam", "i", "r"], ["readVariable", "length"]]],
						["setVar:to:", "i", ["getParam", "i", "r"]],
						["setVar:to:", "list", ["getParam", "list", "r"]],
						["doRepeat",
							["readVariable", "length"],
							[["setLine:ofList:to:",
									["+", ["readVariable", "result"], ["readVariable", "i"]],
									"heap",
									["getLine:ofList:", ["+", ["readVariable", "list"], 1], "heap"]],
								["setVar:to:", "list", ["getLine:ofList:", ["+", ["readVariable", "list"], 2], "heap"]],
								["changeVar:by:", "i", 1]]]]]],
			"sounds": [{
					"soundName": "meow",
					"soundID": 0,
					"md5": "83c36d806dc92327b9e7049a565c6bff.wav",
					"sampleCount": 18688,
					"rate": 22050,
					"format": ""
				}],
			"costumes": [{
					"costumeName": "costume1",
					"baseLayerID": 1,
					"baseLayerMD5": "f9a1c175dbe2e5dee472858dd30d16bb.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 47,
					"rotationCenterY": 55
				},
				{
					"costumeName": "#\\A",
					"baseLayerID": 1,
					"baseLayerMD5": "f9a1c175dbe2e5dee472858dd30d16bb.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 47,
					"rotationCenterY": 55
				},
				{
					"costumeName": "#\\B",
					"baseLayerID": 1,
					"baseLayerMD5": "f9a1c175dbe2e5dee472858dd30d16bb.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 47,
					"rotationCenterY": 55
				},
				{
					"costumeName": "#\\C",
					"baseLayerID": 1,
					"baseLayerMD5": "f9a1c175dbe2e5dee472858dd30d16bb.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 47,
					"rotationCenterY": 55
				},
				{
					"costumeName": "#\\D",
					"baseLayerID": 1,
					"baseLayerMD5": "f9a1c175dbe2e5dee472858dd30d16bb.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 47,
					"rotationCenterY": 55
				},
				{
					"costumeName": "#\\E",
					"baseLayerID": 1,
					"baseLayerMD5": "f9a1c175dbe2e5dee472858dd30d16bb.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 47,
					"rotationCenterY": 55
				},
				{
					"costumeName": "#\\F",
					"baseLayerID": 1,
					"baseLayerMD5": "f9a1c175dbe2e5dee472858dd30d16bb.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 47,
					"rotationCenterY": 55
				},
				{
					"costumeName": "#\\G",
					"baseLayerID": 1,
					"baseLayerMD5": "f9a1c175dbe2e5dee472858dd30d16bb.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 47,
					"rotationCenterY": 55
				},
				{
					"costumeName": "#\\H",
					"baseLayerID": 1,
					"baseLayerMD5": "f9a1c175dbe2e5dee472858dd30d16bb.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 47,
					"rotationCenterY": 55
				},
				{
					"costumeName": "#\\I",
					"baseLayerID": 1,
					"baseLayerMD5": "f9a1c175dbe2e5dee472858dd30d16bb.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 47,
					"rotationCenterY": 55
				},
				{
					"costumeName": "#\\J",
					"baseLayerID": 1,
					"baseLayerMD5": "f9a1c175dbe2e5dee472858dd30d16bb.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 47,
					"rotationCenterY": 55
				},
				{
					"costumeName": "#\\K",
					"baseLayerID": 1,
					"baseLayerMD5": "f9a1c175dbe2e5dee472858dd30d16bb.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 47,
					"rotationCenterY": 55
				},
				{
					"costumeName": "#\\L",
					"baseLayerID": 1,
					"baseLayerMD5": "f9a1c175dbe2e5dee472858dd30d16bb.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 47,
					"rotationCenterY": 55
				},
				{
					"costumeName": "#\\M",
					"baseLayerID": 1,
					"baseLayerMD5": "f9a1c175dbe2e5dee472858dd30d16bb.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 47,
					"rotationCenterY": 55
				},
				{
					"costumeName": "#\\N",
					"baseLayerID": 1,
					"baseLayerMD5": "f9a1c175dbe2e5dee472858dd30d16bb.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 47,
					"rotationCenterY": 55
				},
				{
					"costumeName": "#\\O",
					"baseLayerID": 1,
					"baseLayerMD5": "f9a1c175dbe2e5dee472858dd30d16bb.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 47,
					"rotationCenterY": 55
				},
				{
					"costumeName": "#\\P",
					"baseLayerID": 1,
					"baseLayerMD5": "f9a1c175dbe2e5dee472858dd30d16bb.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 47,
					"rotationCenterY": 55
				},
				{
					"costumeName": "#\\Q",
					"baseLayerID": 1,
					"baseLayerMD5": "f9a1c175dbe2e5dee472858dd30d16bb.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 47,
					"rotationCenterY": 55
				},
				{
					"costumeName": "#\\R",
					"baseLayerID": 1,
					"baseLayerMD5": "f9a1c175dbe2e5dee472858dd30d16bb.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 47,
					"rotationCenterY": 55
				},
				{
					"costumeName": "#\\S",
					"baseLayerID": 1,
					"baseLayerMD5": "f9a1c175dbe2e5dee472858dd30d16bb.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 47,
					"rotationCenterY": 55
				},
				{
					"costumeName": "#\\T",
					"baseLayerID": 1,
					"baseLayerMD5": "f9a1c175dbe2e5dee472858dd30d16bb.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 47,
					"rotationCenterY": 55
				},
				{
					"costumeName": "#\\U",
					"baseLayerID": 1,
					"baseLayerMD5": "f9a1c175dbe2e5dee472858dd30d16bb.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 47,
					"rotationCenterY": 55
				},
				{
					"costumeName": "#\\V",
					"baseLayerID": 1,
					"baseLayerMD5": "f9a1c175dbe2e5dee472858dd30d16bb.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 47,
					"rotationCenterY": 55
				},
				{
					"costumeName": "#\\W",
					"baseLayerID": 1,
					"baseLayerMD5": "f9a1c175dbe2e5dee472858dd30d16bb.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 47,
					"rotationCenterY": 55
				},
				{
					"costumeName": "#\\X",
					"baseLayerID": 1,
					"baseLayerMD5": "f9a1c175dbe2e5dee472858dd30d16bb.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 47,
					"rotationCenterY": 55
				},
				{
					"costumeName": "#\\Y",
					"baseLayerID": 1,
					"baseLayerMD5": "f9a1c175dbe2e5dee472858dd30d16bb.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 47,
					"rotationCenterY": 55
				},
				{
					"costumeName": "#\\Z",
					"baseLayerID": 1,
					"baseLayerMD5": "f9a1c175dbe2e5dee472858dd30d16bb.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 47,
					"rotationCenterY": 55
				}],
			"currentCostumeIndex": 0,
			"scratchX": 0,
			"scratchY": 0,
			"scale": 1,
			"direction": 90,
			"rotationStyle": "normal",
			"isDraggable": false,
			"indexInLibrary": 1,
			"visible": true,
			"spriteInfo": {
			}
		},
		{
			"listName": "heap",
			"contents": [],
			"isPersistent": false,
			"x": 5,
			"y": 5,
			"width": 100,
			"height": 180,
			"visible": false
		},
		{
			"listName": "stack",
			"contents": [],
			"isPersistent": false,
			"x": 110,
			"y": 5,
			"width": 100,
			"height": 180,
			"visible": false
		}],
	"info": {
		"userAgent": "Scratch 2.0 Offline Editor",
		"scriptCount": 17,
		"videoOn": false,
		"spriteCount": 1,
		"flashVersion": "WIN 32,0,0,182",
		"swfVersion": "v461"
	}
}